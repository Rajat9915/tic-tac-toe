{"version":3,"sources":["index.js"],"names":["Square","props","className","onClick","value","Board","state","squares","Array","fill","xIsNext","i","this","slice","calculateWinner","setState","handleClick","status","winner","renderSquare","React","Component","Game","lines","length","a","b","c","ReactDOM","render","document","getElementById"],"mappings":"8LAKA,SAASA,EAAOC,GACV,OACE,4BAAQC,UAAU,SAClBC,QAAWF,EAAME,SACdF,EAAMG,O,IAMTC,E,YAEJ,WAAYJ,GAAO,IAAD,8BACd,4CAAMA,KACDK,MAAO,CACRC,QAASC,MAAM,GAAGC,KAAK,MAC3BC,SAAQ,GAJM,E,yEASNC,GAChB,IAAMJ,EAAUK,KAAKN,MAAMC,QAAQM,QAC/BC,EAAgBP,IAAYA,EAAQI,KAGxCJ,EAAQI,GAAIC,KAAKN,MAAMI,QAAU,IAAK,IACtCE,KAAKG,SAAS,CAACR,QAASA,EACTG,SAAUE,KAAKN,MAAMI,a,mCAGnBC,GAAI,IAAD,OACd,OAAO,kBAACX,EAAD,CAAQI,MAAQQ,KAAKN,MAAMC,QAAQI,GAC5CR,QAAS,kBAAK,EAAKa,YAAYL,Q,+BAK3B,IACIM,EADEC,EAASJ,EAAgBF,KAAKN,MAAMC,SAS5C,OANIU,EADEC,EACO,WAAaA,EAEb,iBAAmBN,KAAKN,MAAMI,QAAU,IAAM,KAKzD,6BACE,yBAAKR,UAAU,UAAUe,GACzB,yBAAKf,UAAU,aACZU,KAAKO,aAAa,GAClBP,KAAKO,aAAa,GAClBP,KAAKO,aAAa,IAErB,yBAAKjB,UAAU,aACZU,KAAKO,aAAa,GAClBP,KAAKO,aAAa,GAClBP,KAAKO,aAAa,IAErB,yBAAKjB,UAAU,aACZU,KAAKO,aAAa,GAClBP,KAAKO,aAAa,GAClBP,KAAKO,aAAa,S,GArDTC,IAAMC,WA4DpBC,E,iLAIF,OACE,yBAAKpB,UAAU,QACb,yBAAKA,UAAU,cACb,kBAACG,EAAD,OAEF,yBAAKH,UAAU,aACb,8BACA,mC,GAXSkB,IAAMC,WAkBzB,SAASP,EAAgBP,GAWvB,IAVA,IAAMgB,EAAQ,CACZ,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAEAZ,EAAI,EAAGA,EAAIY,EAAMC,OAAQb,IAAK,CAAC,IAAD,cACnBY,EAAMZ,GADa,GAC9Bc,EAD8B,KAC3BC,EAD2B,KACxBC,EADwB,KAErC,GAAIpB,EAAQkB,IAAMlB,EAAQkB,KAAOlB,EAAQmB,IAAMnB,EAAQkB,KAAOlB,EAAQoB,GACpE,OAAOpB,EAAQkB,GAGnB,OAAO,KAITG,IAASC,OACP,kBAACP,EAAD,MACAQ,SAASC,eAAe,U","file":"static/js/main.7830fe0e.chunk.js","sourcesContent":["\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css'\n\nfunction Square(props){\n      return (\n        <button className=\"square\" \n        onClick = {props.onClick}>\n          {props.value}\n        </button>\n      );\n    }\n  \n  \n  class Board extends React.Component {\n\n    constructor(props){\n        super(props);\n        this.state ={\n            squares: Array(9).fill(null),\n        xIsNext:true,\n     }\n\n    }\n\n    handleClick(i){\nconst squares = this.state.squares.slice();\nif (calculateWinner(squares) || squares[i]) {\n    return;\n  }\nsquares[i]= this.state.xIsNext ? 'X' :'O';\nthis.setState({squares: squares,\n               xIsNext: !this.state.xIsNext})\n\n    }\n    renderSquare(i) {\n      return <Square value ={this.state.squares[i]}\n    onClick={()=> this.handleClick(i)}/>;\n    }\n  \n    render() {\n\n        const winner = calculateWinner(this.state.squares);\n        let status;\n        if (winner) {\n          status = 'Winner: ' + winner;\n        } else {\n          status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\n        }\n     \n  \n      return (\n        <div>\n          <div className=\"status\">{status}</div>\n          <div className=\"board-row\">\n            {this.renderSquare(0)}\n            {this.renderSquare(1)}\n            {this.renderSquare(2)}\n          </div>\n          <div className=\"board-row\">\n            {this.renderSquare(3)}\n            {this.renderSquare(4)}\n            {this.renderSquare(5)}\n          </div>\n          <div className=\"board-row\">\n            {this.renderSquare(6)}\n            {this.renderSquare(7)}\n            {this.renderSquare(8)}\n          </div>\n        </div>\n      );\n    }\n  }\n  \n  class Game extends React.Component {\n    render() {\n\n        \n      return (\n        <div className=\"game\">\n          <div className=\"game-board\">\n            <Board />\n          </div>\n          <div className=\"game-info\">\n            <div>{/* status */}</div>\n            <ol>{/* TODO */}</ol>\n          </div>\n        </div>\n      );\n    }\n  }\n  \n  function calculateWinner(squares) {\n    const lines = [\n      [0, 1, 2],\n      [3, 4, 5],\n      [6, 7, 8],\n      [0, 3, 6],\n      [1, 4, 7],\n      [2, 5, 8],\n      [0, 4, 8],\n      [2, 4, 6],\n    ];\n    for (let i = 0; i < lines.length; i++) {\n      const [a, b, c] = lines[i];\n      if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n        return squares[a];\n      }\n    }\n    return null;\n  }\n  // ========================================\n  \n  ReactDOM.render(\n    <Game />,\n    document.getElementById('root')\n  );\n  "],"sourceRoot":""}